name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      run: cd backend && npm ci

    - name: Run linting
      run: cd backend && npm run lint

    - name: Run tests
      run: cd backend && npm test
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/test_db
        JWT_SECRET: test-secret
        REDIS_URL: redis://localhost:6379
        NODE_ENV: test

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push API image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/economic-justice-api:latest
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/economic-justice-api:latest
        cache-to: type=inline

    - name: Build and push Network image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.network
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/economic-justice-network:latest
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/economic-justice-network:latest
        cache-to: type=inline

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to production
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /opt/economic-justice-platform
          git pull origin main
          docker-compose pull
          docker-compose up -d
          docker system prune -f